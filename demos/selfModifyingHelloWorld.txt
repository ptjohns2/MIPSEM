#Obfuscated Hello World in MIPS32 assembly.  Uses self modifying code

####### MACROS

.eqv	INSTRUCTION_ENCODING__addi_$v0_$0_0	0x20020000	#all text after .eqv name included in the macro, including spaces separated tokens (trimmed after) to allow for instructions to be .eqv'd

.macro printString(%label)	#macro parameters separated by comma, no required naming conventions
	li	$t1, INSTRUCTION_ENCODING__addi_$v0_$0_0
	addi	$t1, $t1, 0b0100	#binary literals supported
	la	$t0, nopAddr1
	sw	$t1, 0($t0)
	nopAddr1:	nop		#labels renamed during macro replacement section of assembly to prevent label name collisions when a macro is used multiple times
	la	$a0, %label
	la	$t2, instructionAddr	#$t2 = instructionAddr
	lw	$t1, 0($t2)		#$t1 = *$t2 = *instructionAddr
	la	$t2, nopAddr2		#$t2 = nopAddr2
	sw	$t1, 0($t2)		#*nopAddr2 = $t1 = *$t2 = *instructionAddr
	nopAddr2:	nop
.end_macro

.macro exit()
	addi	$v0, $zero, 0xA
	syscall
.end_macro
	
.data	####### .DATA SECTION

stringAddr:		.asciiz	"Hello, World!"

#encode "syscall" instruction to this word in .data section
instructionAddr:	.word	syscall	

.text	####### .TEXT SECTION
main:
	printString(stringAddr)
	exit	# syscall #10