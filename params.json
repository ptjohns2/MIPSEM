{"name":"MIPSEM","tagline":"Assembler and emulator for MIPS32 assembly","body":"#MIPSEM (C++)  \r\n\r\n##Assembler and emulator for MIPS32 assembly   \r\n   \r\n>Decodes and encodes all MIPS32 instructions.  MIPS32 asm programs can be mapped to a custom .mmap file which can be mapped to MIPSEM's 32-bit addressable virtual memory system.  The virtual CPU can then execute instructions from memory by using a decoded instruction cache to speed up execution.  This results in no additional instruction decoding overhead within loops or function calls, as well as the ability to write self modifying code.   \r\n   \r\n   \r\n##Progress:   \r\n1. Instruction encoding\t-\t*stable*     \r\n2. Instruction decoding\t-\t*stable*     \r\n3. Virtual memory system\t-\t*stable*     \r\n4. Object file disk serialization\t-\t*stable*     \r\n5. Object file assembly from .asm sources\t-\t*stable*   \r\n6. Instruction emulation from memory\t-\t  nearly complete for most commonly used instructions    \r\n7. Pseudoinstruction replacement\t-\t*stable*    \r\n8. Macro replacement\t-\t*stable*       \r\n     \r\n###Example MIPS32 program:               \r\n      \r\n ```Assembly\r\n#Obfuscated Hello World in MIPS32 assembly.  Uses self modifying code\r\n\r\n####### MACROS\r\n\r\n.eqv\tINSTRUCTION_ENCODING__addi_$v0_$0_0\t0x20020000\t\r\n\r\n.macro printString(%label)\r\n\tli\t$t1, INSTRUCTION_ENCODING__addi_$v0_$0_0\r\n\taddi\t$t1, $t1, 4\r\n\tla\t$t0, nopAddr1\r\n\tsw\t$t1, 0($t0)\r\n\tnopAddr1:\tnop\r\n\tla\t$a0, %label\r\n\tla\t$t2, instructionAddr\t#$t2 = instructionAddr\r\n\tlw\t$t1, 0($t2)\t\t#$t1 = *$t2 = *instructionAddr\r\n\tla\t$t2, nopAddr2\t\t#$t2 = nopAddr2\r\n\tsw\t$t1, 0($t2)\t\t#*nopAddr2 = $t1 = *$t2 = *instructionAddr\r\n\tnopAddr2:\tnop\r\n.end_macro\r\n\r\n.macro exit()\r\n\taddi\t$v0, $zero, 0xA\r\n\tsyscall\r\n.end_macro\r\n\t\r\n####### .DATA SECTION\r\n.data\r\nstringAddr:\t\t.asciiz\t\"Hello, World!\"\r\ninstructionAddr:\t.word\tsyscall\t#encode \"syscall\" instruction to this word in .data section\r\n\r\n####### .TEXT SECTION\r\n.text\r\n\tprintString(stringAddr)\r\n\texit()\r\n\t\r\n\t\t\t\t\t\t\t\r\n```    \r\n      \r\n\r\n###MIPSEM output:      \r\n![Alt text](/demos/selfModifyingHelloWorld_output.png?raw=true)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}